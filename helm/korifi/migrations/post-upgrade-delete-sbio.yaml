apiVersion: v1
kind: ServiceAccount
metadata:
  name: korifi-delete-sbio-migration
  namespace: {{ .Release.Namespace }}
imagePullSecrets:
{{- range .Values.systemImagePullSecrets }}
- name: {{ . | quote }}
{{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: korifi-delete-sbio-migration
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: korifi-delete-sbio-migration
subjects:
- kind: ServiceAccount
  name: korifi-delete-sbio-migration
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: korifi-delete-sbio-migration
rules:
- apiGroups:
  - servicebinding.io
  resources:
  - servicebindings
  verbs:
  - list
  - delete
- apiGroups:
  - korifi.cloudfoundry.org
  resources:
  - appworkloads
  verbs:
  - list
  - delete
- apiGroups:
  - korifi.cloudfoundry.org
  resources:
  - cfapps
  verbs:
  - get
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  name: delete-sbio-bindings
  namespace: {{ .Release.Namespace }}
spec:
  template:
    metadata:
      name: delete-sbio-bindings
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      serviceAccountName: korifi-delete-sbio-migration
      restartPolicy: Never
      {{- include "korifi.podSecurityContext" . | indent 6 }}
      containers:
      - name: post-upgrade-delete-sbio
        image: {{ .Values.helm.hooksImage }}
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
        command:
        - bash
        - -c
        - |
          set -e

          list-bound-apps() {
            kubectl get --all-namespaces servicebindings.servicebinding.io \
            -o=custom-columns="NAMESPACE":"metadata.namespace","APP_GUID":".metadata.labels.korifi\.cloudfoundry\.org/app-guid" \
            --no-headers | sort | uniq
          }

          main() {
             apps="$(list-bound-apps)"

             if [[ -z "${apps}" ]]; then
               echo "No apps bound to services. Nothing to do."
               return
             fi

            while IFS= read -r line; do
               read -r ns app_guid <<<"$line"

               while ! diff /tmp/actual /tmp/desired; do

                 echo "waiting for status.serviceBindings in cfapp $ns/$app_guid"
                 sleep 1

                 kubectl get -n $ns servicebindings.servicebinding.io \
                 -l "korifi.cloudfoundry.org/app-guid=$app_guid" \
                 -o=custom-columns="BINDING_GUID":"metadata.labels.korifi\.cloudfoundry\.org/service-binding-guid" \
                 --no-headers | sort >/tmp/desired
                 kubectl -n $ns get cfapps.korifi.cloudfoundry.org $app_guid -o=jsonpath='{$.status.serviceBindings[*].guid}' | tr ' ' '\n' | sort >/tmp/actual

               done

             kubectl delete -n $ns servicebindings.servicebinding.io -l "korifi.cloudfoundry.org/app-guid=$app_guid"
             kubectl delete -n $ns appworkloads.korifi.cloudfoundry.org -l "korifi.cloudfoundry.org/app-guid=$app_guid"

            done <<<"$apps"
          }

          main
