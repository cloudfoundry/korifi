apiVersion: apps/v1
kind: Deployment
metadata:
  name: korifi-route-controller-manager
  labels:
    app: korifi-route-controller
  namespace: { { .Release.Namespace } }
spec:
  replicas: { { .Values.controllers.replicas | default 1 } }
  selector:
    matchLabels:
      app: korifi-route-controller
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
        prometheus.io/path: /metrics
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
        checksum/config: { { tpl ($.Files.Get "route-controller/configmap.yaml") $ | sha256sum } }
      labels:
        app: korifi-route-controller
    spec:
      containers:
        - name: manager
          env:
            - name: ROUTECONTROLCONFIG
              value: /etc/korifi-route-controller-config
          image: { { .Values.route-controller.image } }
          imagePullPolicy: IfNotPresent
          { { - if .Values.debug } }
          command:
            - "/dlv"
          args:
            - "--listen=:40000"
            - "--headless=true"
            - "--api-version=2"
            - "exec"
            - "/manager"
            - "--continue"
            - "--accept-multiclient"
            - "--"
            - "--health-probe-bind-address=:8081"
            - "--leader-elect"
          { { - else } }
            - "--health-probe-bind-address=:8081"
            - "--leader-elect"
          { { - end } }
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
            - containerPort: 8080
              name: metrics
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
            { { - include "korifi.resources" . | indent 8 } }
            { { - include "korifi.securityContext" . | indent 8 } }
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
            - mountPath: /etc/korifi-route-controller-config
              name: korifi-route-controller-config
              readOnly: true
            { { - include "korifi.podSecurityContext" . | indent 6 } }
      serviceAccountName: korifi-route-controller-manager
        { {- if .Values.route-controller.nodeSelector }}
      nodeSelector:
        { { toYaml .Values.route-controller.nodeSelector | indent 8 } }
        { { - end } }
        { { - if .Values.route-controller.tolerations } }
      tolerations:
        { { - toYaml .Values.route-controller.tolerations | nindent 8 } }
        { { - end } }
      terminationGracePeriodSeconds: 10
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: route-controller-webhook-server-cert
        - configMap:
            name: korifi-route-controller-config
          name: korifi-route-controller-config